# this location will generate the graphql schema needed in order to compile fontend code
# that needs this information (Relay / GraphiQL)
location /internal/graphql/schema.json {

    if ($development != "1") {
        return 404; #hide when not in development
    }

    default_type  application/json;
    content_by_lua_block {
        local relay_id_column = nil
        if ngx.var.relay_id_column and type( ngx.var.relay_id_column ) == 'string' and ngx.var.relay_id_column ~= '' then
            relay_id_column = ngx.var.relay_id_column;
        end
        ngx.say(subzero.get_graphql_schema(relay_id_column, hooks))
    }
}

# main location that will handle graphql requests
location /internal/graphql/ {
    internal;
    # include includes/http/server/locations/internal_rest/*.conf;
    default_type  application/json;
    # include sub0/security.conf;
    
    # rewrite_by_lua_block {
    #     local um = sub0.user_module
    #     if um and um.on_graphql_request then
    #         um.on_graphql_request()
    #     end
    # }
    
    content_by_lua_block {
        local relay_id_column = nil
        if ngx.var.relay_id_column and type( ngx.var.relay_id_column ) == 'string' and ngx.var.relay_id_column ~= '' then
            relay_id_column = ngx.var.relay_id_column;
        end
        ngx.req.read_body()
        local body = ngx.req.get_body_data()
        local response
        if body:find('IntrospectionQuery') then
            response = subzero.get_graphql_schema(relay_id_column, hooks)
        else
            response = postgrest.handle(subzero.get_app_schema(relay_id_column, hooks), subzero.get_json_schema(relay_id_column))
        end
        ngx.say(response)
    }

    # header_filter_by_lua_block {
    #     local um = sub0.user_module
    #     if um and um.before_graphql_response then
    #         um.before_graphql_response()
    #     end
    # }

    if ($development = "1") {
        add_header Request-Time $request_time;
    }
}