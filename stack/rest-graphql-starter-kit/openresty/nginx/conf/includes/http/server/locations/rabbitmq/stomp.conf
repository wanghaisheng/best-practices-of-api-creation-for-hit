# Location that proxies stomp/websocker connection so that we can transparently turn
# session cookie (which is a jwt) into basic authorization header
location ~ ^/rabbitmq/(stomp|ws) {

    access_by_lua_block {
        local ck = require 'resty.cookie'
        local cookie = ck:new()
        local token = cookie:get('SESSIONID')
        local authorization = ngx.var.http_authorization
        if token and authorization == nil then
            local jwt = require 'resty.jwt'
            local jwt_secret = os.getenv('JWT_SECRET')
            local jwt_obj = jwt:verify(jwt_secret, token)
            local now = os.time(os.date("!*t"))
            if jwt_obj and jwt_obj.valid
               and 
               (
                   (jwt_obj.payload.exp and jwt_obj.payload.exp > now)
                   or
                   jwt_obj.payload.exp == nil
               )
            then
                local user_id = jwt_obj.payload.user_id
                ngx.req.set_header('Authorization', 'Basic ' .. ngx.encode_base64('user_' .. user_id .. ':'..token))
            end
        end
    }
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_pass http://rabbitmq_upstream/$1;
}
